<<<<<<< HEAD
<<<<<<< HEAD
import numpy.exceptions as ex

from typing_extensions import assert_type

assert_type(ex.ModuleDeprecationWarning(), ex.ModuleDeprecationWarning)
assert_type(ex.VisibleDeprecationWarning(), ex.VisibleDeprecationWarning)
assert_type(ex.ComplexWarning(), ex.ComplexWarning)
assert_type(ex.RankWarning(), ex.RankWarning)
assert_type(ex.TooHardError(), ex.TooHardError)
assert_type(ex.AxisError("test"), ex.AxisError)
assert_type(ex.AxisError(5, 1), ex.AxisError)
=======
import numpy as np

reveal_type(np.ModuleDeprecationWarning())  # E: ModuleDeprecationWarning
reveal_type(np.VisibleDeprecationWarning())  # E: VisibleDeprecationWarning
reveal_type(np.ComplexWarning())  # E: ComplexWarning
reveal_type(np.RankWarning())  # E: RankWarning
reveal_type(np.TooHardError())  # E: TooHardError
reveal_type(np.AxisError("test"))  # E: AxisError
reveal_type(np.AxisError(5, 1))  # E: AxisError
>>>>>>> 596fb2e (Added incomplete requirements.txt)
=======
import numpy.exceptions as ex

from typing_extensions import assert_type

assert_type(ex.ModuleDeprecationWarning(), ex.ModuleDeprecationWarning)
assert_type(ex.VisibleDeprecationWarning(), ex.VisibleDeprecationWarning)
assert_type(ex.ComplexWarning(), ex.ComplexWarning)
assert_type(ex.RankWarning(), ex.RankWarning)
assert_type(ex.TooHardError(), ex.TooHardError)
assert_type(ex.AxisError("test"), ex.AxisError)
assert_type(ex.AxisError(5, 1), ex.AxisError)
>>>>>>> 6d4acca (added stuff so I can run on nixos)
