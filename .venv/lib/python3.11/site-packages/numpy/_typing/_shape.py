<<<<<<< HEAD
<<<<<<< HEAD
from collections.abc import Sequence
from typing import SupportsIndex, TypeAlias

_Shape: TypeAlias = tuple[int, ...]

# Anything that can be coerced to a shape tuple
_ShapeLike: TypeAlias = SupportsIndex | Sequence[SupportsIndex]
=======
from typing import Sequence, Tuple, Union, SupportsIndex
=======
from collections.abc import Sequence
from typing import SupportsIndex, TypeAlias
>>>>>>> 6d4acca (added stuff so I can run on nixos)

_Shape: TypeAlias = tuple[int, ...]

# Anything that can be coerced to a shape tuple
<<<<<<< HEAD
_ShapeLike = Union[SupportsIndex, Sequence[SupportsIndex]]
>>>>>>> 596fb2e (Added incomplete requirements.txt)
=======
_ShapeLike: TypeAlias = SupportsIndex | Sequence[SupportsIndex]
>>>>>>> 6d4acca (added stuff so I can run on nixos)
